name: Build & Deploy Jupyter Book

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      # Make git more tolerant of slow/flaky networks
      GIT_HTTP_LOW_SPEED_LIMIT: "1000"
      GIT_HTTP_LOW_SPEED_TIME: "60"

    steps:
      # 1) Try a normal checkout pinned to the exact commit
      - name: Checkout (git)
        uses: actions/checkout@v5
        with:
          ref: ${{ github.sha }}
          fetch-depth: 1

      # 2) If that fails, retry with a full fetch once
      - name: Retry checkout (full fetch)
        if: failure()
        uses: actions/checkout@v5
        with:
          ref: ${{ github.sha }}
          fetch-depth: 0

      # 3) Last-resort fallback: download repo archive via API (no git needed)
      - name: Fallback download source archive
        if: failure()
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          set -euxo pipefail
          URL="https://api.github.com/repos/${{ github.repository }}/tarball/${{ github.sha }}"
          curl -sSL --retry 5 --retry-delay 5 \
            -H "Authorization: Bearer $GH_TOKEN" \
            -H "Accept: application/vnd.github+json" \
            "$URL" -o src.tgz
          mkdir -p "$GITHUB_WORKSPACE"
          tar -xzf src.tgz --strip-components=1 -C "$GITHUB_WORKSPACE"
          # Recreate a minimal git repo so later steps that expect git don't break
          git init
          git config user.email "actions@github.com"
          git config user.name "github-actions"
          git add -A
          git commit -m "Archive checkout (fallback)"

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install Jupyter Book
        run: python -m pip install -U pip jupyter-book

      - name: Build book
        run: jupyter-book build docs

      - name: Configure Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v4
        with:
          path: docs/_build/html

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
